.options savecurrents

* PHILIPS BJT'S
.MODEL BC557A PNP(IS=2.059E-14 ISE=2.971f ISC=1.339E-14 XTI=3 BF=227.3 BR=7.69 IKF=0.08719 IKR=0.07646 XTB=1.5 VAF=37.2 VAR=11.42 VJE=0.5912 VJC=0.1 RE=0.688 RC=0.6437 RB=1 RBM=1 IRB=1E-06 CJE=1.4E-11 CJC=1.113E-11 XCJC=0.6288 FC=0.7947 NF=1.003 NR=1.007 NE=1.316 NC=1.15 MJE=0.3572 MJC=0.3414 TF=7.046E-10 TR=1m2 ITF=0.1947 VTF=5.367 XTF=4.217 EG=1.11)
.MODEL BC547A NPN(IS=1.533E-14 ISE=7.932E-16 ISC=8.305E-14 XTI=3 BF=178.7 BR=8.628 IKF=0.1216 IKR=0.1121 XTB=1.5 VAF=69.7 VAR=44.7 VJE=0.4209 VJC=0.2 RE=0.6395 RC=0.6508 RB=1 RBM=1 IRB=1E-06 CJE=1.61E-11 CJC=4.388p XCJC=0.6193 FC=0.7762 NF=1.002 NR=1.004 NE=1.436 NC=1.207 MJE=0.3071 MJC=0.2793 TF=4.995E-10 TR=1m2 ITF=0.7021 VTF=3.523 XTF=139 EG=1.11)

Vcc vcc 0 12.0
Vin in 0 0 ac 1.0 sin(0 10m 1k)
Rin in in2 100

* input coupling capacitor
Ci in2 base 1m

* bias circuit
R1 vcc base 80k
R2 base 0 20k

* gain stage
Q1 coll base emit BC547A
Rc vcc coll 0.5k
Re emit 0 100

* bypass capacitor
Cb emit 0 2.25m


* output stage
Q2 0 coll emit2 BC557A
Rout emit2 vcc 100

* output coupling capacitor
Co emit2 out 1m

* load
RL out 0 8

.op
.end

.control


* time analysis
tran 1e-5 1e-2
plot v(coll)
*hardcopy vo1.ps vdb(coll)
echo

* checking whether transistors are working in the F.A.R
echo checking whether transistors are working in the F.A.R:
echo npn transistor:
let VCE=V(coll)-V(emit) 
let VBE=V(base)-V(emit)
meas tran VCEdc avg VCE
meas tran VBEdc avg VBE
echo

echo pnp transistor:
let VEC=V(emit2)-0
let VEB=V(emit2)-V(coll)
meas tran VECdc avg VEC
meas tran VEBdc avg VEB
echo

* frequency analysis
ac dec 10 10 100MEG
plot vdb(coll)
plot vp(coll)
*hardcopy vo1f.ps vdb(coll)

plot vdb(out)
plot vp(out)
*hardcopy vo2f.ps vdb(out)

hardcopy spice_gain_db.ps vdb(out)-vdb(in2)
echo spice_gain_db_FIG

echo

* input impedance in kohm
echo Input impedance:
let Zi=v(in2)[40]/vin#branch[40]/(-1000)
let AbsZi=abs(v(in2)[40]/vin#branch[40]/(-1000))
plot abs(v(in2)[40]/vin#branch[40]/(-1000))
print v(in2)[40]/vin#branch[40]/(-1000)
print abs(v(in2)[40]/vin#branch[40]/(-1000))
echo 

* gain in dB
echo Gain in dB:
let Gain_dB= vdb(out)-vdb(in2)
meas	ac	GaindBmax	max		Gain_dB	from=10	to=100MEG
echo 

* linear gain
echo Linear gain:
let LinGain = 10^(GaindBmax/20)
print LinGain
echo

* bandwidth computation
echo vdb(out) maximum value: (used for computing cut-off frequencies)
meas	ac	vdboutmax	max		vdb(out)	from=10	to=100MEG
echo
let vdboutmaxMinus3=vdboutmax-3

* lower cut-off frequency
echo Lower cut-off frequency:
meas ac lowercutoff when vdb(out)=vdboutmaxMinus3 rise=1
echo 

* upper cut-off frequency
echo Upper cut-off frequency:
meas ac uppercutoff when vdb(out)=vdboutmaxMinus3 fall=last
echo 

* bandwidth
echo Bandwidth:
let Bandwidth = uppercutoff - lowercutoff
print Bandwidth
echo

* cost calculation: done manually
echo Cost:
let Cost= 4351.008
print Cost
echo

* merit calculation
echo Merit:
let merit=(LinGain*Bandwidth)/(Cost*lowercutoff)
print merit
echo

* uncomment for testing
*meas ac Testing1 find vdb(out) at=lowercutoff
*meas ac Testing2 find vdb(out) at=uppercutoff
*print vdboutmaxMinus3

* need a different setup to measure output impedance

echo "SimZi_TAB"
print Zi
print AbsZi
echo "SimZi_END"

echo

echo "SimGain_TAB"
print GaindBmax
print LinGain
echo "SimGain_END"

echo

echo "SimFreqs_TAB"
print lowercutoff
print uppercutoff
print Bandwidth
echo "SimFreqs_END"

echo

echo "SimMerit_TAB"
print Cost
print Merit
echo "SimMerit_END"

echo

echo "SimFARnpn_TAB"
echo vcedc = 6.807931e+00
echo vbedc = 7.074442e-01
echo "SimFARnpn_END"

echo

echo "SimFARpnp_TAB"
echo vecdc = 8.296052e+00
echo vebdc = 5.927437e-01
echo "SimFARpnp_END"

echo

* output impedance: values taken from script 't4_OutputZ.net'
echo "SimZo_TAB"
echo zo = 4.612861e+00 , 1.906177e-01
echo abszo = 4.616798e+00
echo "SimZo_END"

echo

.endc 

